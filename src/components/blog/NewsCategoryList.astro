---
// props でアクティブなカテゴリー名を受け取る
const { activeCategory } = Astro.props;

const categories = [
  { name: "すべて", slug: "/news/1" },
  { name: "ご連絡", slug: "/news/category/information/1" },
  { name: "募集案内", slug: "/news/category/recruitment/1" },
  { name: "みもみ日記", slug: "/news/category/mimomi-nikki/1" },
];
---

<ul class="c-news-category-list">
  {categories.map(category => (
    <li class="c-news-category-list-item">
      <a
        href={category.slug}
        class={`u-uppercase ${activeCategory === category.name ? "is-active" : ""}`}
      >
        {category.name}
      </a>
    </li>
  ))}
</ul>

<style lang="scss">
  @use '../../styles/breakpoints' as *;

  .c-news-category-list {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    gap: 10px;
    max-width: 200px;
    margin: auto;
  }

  .c-news-category-list-item {
    a {
      display: grid;
      place-items: center;
      width: 90px;
      height: 22px;
      border-radius: 3px;
      border: 1px solid currentColor;
      line-height: 1;

      &.is-active {
        color: var(--color-base);
        border-color: var(--color-baby-pink);
        background-color: var(--color-baby-pink);
      }
    }
  }

  @include mq() {
    .c-news-category-list {
      gap: 0;
      max-width: 560px;
      margin: auto;
    }

    .c-news-category-list-item {
      a {
        width: 110px;
        height: 26px;
        font-size: 14px;
      }
    }
  }

  @media (any-hover: hover) {
    .c-news-category-list-item {
      a {
        transition: color .3s ease, border-color .3s ease, background-color .3s ease;

        &:hover {
          color: var(--color-base);
          border-color: var(--color-baby-pink);
          background-color: var(--color-baby-pink);
        }
      }
    }
  }
</style>
